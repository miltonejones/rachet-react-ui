{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/rachet-react-ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ConnectionForm, ColumnForm, ConnectionList, PaginationBar, QueryPane, TableList, ColumnList, DataGrid } from './components';\nimport { Collapse, Flex, IconButton, Box, Frame, Typography, css, Avatar, Dialog, Backdrop, Snackbar, Spacer, Spinner, Menu } from './components/UI/UI';\nimport DocNode from './components/UI/Docs/DocNode';\nimport useApp from './hooks/useApp';\nimport { Smiley, Close, Hamburger, Dribble } from './icons';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const {\n    collapseHeight,\n    columnListArgs,\n    connectionListArgs,\n    connectionFormArgs,\n    getPage,\n    paginationParams,\n    queryPaneArgs,\n    setState,\n    state,\n    table,\n    tableDesc,\n    tableListArgs,\n    tableName,\n    tableNames,\n    viewPaneCss,\n    snackState,\n    say\n  } = useApp();\n  const [open, setOpen] = React.useState(false);\n  const CloseIcon = !state.sidebarOpen ? Hamburger : Close;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: viewPaneCss,\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Collapse, {\n      on: !state.ratchet,\n      height: collapseHeight,\n      noscroll: true,\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            children: [!!state.sidebarOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: \"https://www.mysql.com/common/logos/powered-by-mysql-167x86.png\",\n                alt: \"logo\",\n                size: \"large\",\n                mr: 2,\n                variant: \"rounded\",\n                children: \"a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 4,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Ratchet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: \"SQL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: \"The Internet's base for data.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              mr: 4,\n              size: \"medium\",\n              onClick: () => setState({ ...state,\n                sidebarOpen: !state.sidebarOpen\n              }),\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), !!state.sidebarOpen && /*#__PURE__*/_jsxDEV(Frame, {\n            offset: 48,\n            children: [/*#__PURE__*/_jsxDEV(Collapse, {\n              on: !tableNames,\n              children: /*#__PURE__*/_jsxDEV(ConnectionList, { ...connectionListArgs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              inspect: true,\n              noscroll: true,\n              on: !!tableNames,\n              height: !!tableName ? '140px' : -1,\n              children: /*#__PURE__*/_jsxDEV(TableList, { ...tableListArgs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), ' ', !!tableDesc && /*#__PURE__*/_jsxDEV(ColumnList, { ...columnListArgs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              mb: 5,\n              on: !!state.selectedColumn,\n              children: /*#__PURE__*/_jsxDEV(ColumnForm, {\n                column: state.selectedColumn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          column: true,\n          className: \"worksize\",\n          children: [!!state.newQuery && /*#__PURE__*/_jsxDEV(QueryPane, { ...queryPaneArgs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 34\n          }, this), !!table && !!tableDesc && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              align: \"center\",\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(PaginationBar, { ...paginationParams,\n                click: getPage,\n                label: \"row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), !!table.fields && /*#__PURE__*/_jsxDEV(Menu, {\n                button: \"Sort...\",\n                options: table.fields.map(f => f.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css({\n                workpane: 1,\n                worksize: 1,\n                lower: state.newQuery\n              }),\n              children: !!table && /*#__PURE__*/_jsxDEV(DataGrid, {\n                table: table\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        onClick: () => setState({ ...state,\n          ratchet: !state.ratchet\n        }),\n        children: [' ', /*#__PURE__*/_jsxDEV(Box, {\n          mr: 2,\n          children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"u\", {\n            className: \"link\",\n            children: \"RatchetUI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 24\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Smiley, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: state.busy,\n      style: {\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        children: [' ', /*#__PURE__*/_jsxDEV(Dribble, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      height: \"440px\",\n      width: \"340px\",\n      onClose: () => setState(s => ({ ...s,\n        connectForm: !1\n      })),\n      open: state.connectForm,\n      children: /*#__PURE__*/_jsxDEV(ConnectionForm, { ...connectionFormArgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, { ...snackState,\n      where: \"se\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c56AuCc1IT7L3uxXtS7Sknt4U9Y=\", false, function () {\n  return [useApp];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/miltonejones/projects/rachet-react-ui/src/App.js"],"names":["React","ConnectionForm","ColumnForm","ConnectionList","PaginationBar","QueryPane","TableList","ColumnList","DataGrid","Collapse","Flex","IconButton","Box","Frame","Typography","css","Avatar","Dialog","Backdrop","Snackbar","Spacer","Spinner","Menu","DocNode","useApp","Smiley","Close","Hamburger","Dribble","App","collapseHeight","columnListArgs","connectionListArgs","connectionFormArgs","getPage","paginationParams","queryPaneArgs","setState","state","table","tableDesc","tableListArgs","tableName","tableNames","viewPaneCss","snackState","say","open","setOpen","useState","CloseIcon","sidebarOpen","ratchet","selectedColumn","newQuery","width","fields","map","f","name","workpane","worksize","lower","busy","color","s","connectForm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,cADF,EAEEC,UAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,UAPF,EAQEC,QARF,QASO,cATP;AAWA,SACEC,QADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,KALF,EAMEC,UANF,EAOEC,GAPF,EAQEC,MARF,EASEC,MATF,EAUEC,QAVF,EAWEC,QAXF,EAYEC,MAZF,EAaEC,OAbF,EAcEC,IAdF,QAeO,oBAfP;AAgBA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,OAAnC,QAAkD,SAAlD;AAEA,OAAO,aAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,gBANI;AAOJC,IAAAA,aAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,KATI;AAUJC,IAAAA,KAVI;AAWJC,IAAAA,SAXI;AAYJC,IAAAA,aAZI;AAaJC,IAAAA,SAbI;AAcJC,IAAAA,UAdI;AAeJC,IAAAA,WAfI;AAgBJC,IAAAA,UAhBI;AAiBJC,IAAAA;AAjBI,MAkBFtB,MAAM,EAlBV;AAmBA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBhD,KAAK,CAACiD,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMC,SAAS,GAAG,CAACZ,KAAK,CAACa,WAAP,GAAqBxB,SAArB,GAAiCD,KAAnD;AACA,sBACE;AAAK,IAAA,KAAK,EAAEkB,WAAZ;AAAyB,IAAA,SAAS,EAAC,KAAnC;AAAA,4BAEE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE,CAACN,KAAK,CAACc,OAArB;AAA8B,MAAA,MAAM,EAAEtB,cAAtC;AAAsD,MAAA,QAAQ,MAA9D;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAC,QAAZ;AAAA,uBACG,CAAC,CAACQ,KAAK,CAACa,WAAR,iBACC;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,GAAG,EAAC,gEADN;AAEE,gBAAA,GAAG,EAAC,MAFN;AAGE,gBAAA,IAAI,EAAC,OAHP;AAIE,gBAAA,EAAE,EAAE,CAJN;AAKE,gBAAA,OAAO,EAAC,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA,4BAFJ,eAuBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBAvBF,eAwBE,QAAC,UAAD;AACE,cAAA,EAAE,EAAE,CADN;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAE,MACPd,QAAQ,CAAC,EAAE,GAAGC,KAAL;AAAYa,gBAAAA,WAAW,EAAE,CAACb,KAAK,CAACa;AAAhC,eAAD,CAJZ;AAAA,qCAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,oBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAmCG,CAAC,CAACb,KAAK,CAACa,WAAR,iBACC,QAAC,KAAD;AAAO,YAAA,MAAM,EAAE,EAAf;AAAA,oCAEE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAE,CAACR,UAAf;AAAA,qCACE,QAAC,cAAD,OAAoBX;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME,QAAC,QAAD;AACE,cAAA,OAAO,MADT;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,EAAE,EAAE,CAAC,CAACW,UAHR;AAIE,cAAA,MAAM,EAAE,CAAC,CAACD,SAAF,GAAc,OAAd,GAAwB,CAAC,CAJnC;AAAA,qCAOE,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,oBANF,EAcc,GAdd,EAgBG,CAAC,CAACD,SAAF,iBAAe,QAAC,UAAD,OAAgBT;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAhBlB,eAiBE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAE,CAAd;AAAiB,cAAA,EAAE,EAAE,CAAC,CAACO,KAAK,CAACe,cAA7B;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,MAAM,EAAEf,KAAK,CAACe;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA6DE,QAAC,IAAD;AAAM,UAAA,MAAM,MAAZ;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,qBACG,CAAC,CAACf,KAAK,CAACgB,QAAR,iBAAoB,QAAC,SAAD,OAAelB;AAAf;AAAA;AAAA;AAAA;AAAA,kBADvB,EAGG,CAAC,CAACG,KAAF,IAAW,CAAC,CAACC,SAAb,iBACC,QAAC,GAAD;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAC,QAAZ;AAAqB,cAAA,KAAK,EAAE;AAAEe,gBAAAA,KAAK,EAAE;AAAT,eAA5B;AAAA,sCACE,QAAC,aAAD,OACMpB,gBADN;AAEE,gBAAA,KAAK,EAAED,OAFT;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,sBANF,EAOG,CAAC,CAACK,KAAK,CAACiB,MAAR,iBACC,QAAC,IAAD;AACE,gBAAA,MAAM,EAAC,SADT;AAEE,gBAAA,OAAO,EAAEjB,KAAK,CAACiB,MAAN,CAAaC,GAAb,CAAkBC,CAAD,IAAOA,CAAC,CAACC,IAA1B;AAFX;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAgBE;AACE,cAAA,SAAS,EAAE5C,GAAG,CAAC;AACb6C,gBAAAA,QAAQ,EAAE,CADG;AAEbC,gBAAAA,QAAQ,EAAE,CAFG;AAGbC,gBAAAA,KAAK,EAAExB,KAAK,CAACgB;AAHA,eAAD,CADhB;AAAA,wBAOG,CAAC,CAACf,KAAF,iBAAW,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AAPd;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAkGE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC,EAAE,GAAGC,KAAL;AAAYc,UAAAA,OAAO,EAAE,CAACd,KAAK,CAACc;AAA5B,SAAD,CAFzB;AAAA,mBAIG,GAJH,eAKE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iDACa;AAAG,YAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADb,EAC+C,GAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlGF,eAgHE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEd,KAAK,CAACyB,IAAtB;AAA4B,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAnC;AAAA,8BACE,QAAC,OAAD;AAAA,mBACG,GADH,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,EAEc,GAFd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhHF,eAuHE,QAAC,MAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAE,MAAM3B,QAAQ,CAAE4B,CAAD,KAAQ,EAAE,GAAGA,CAAL;AAAQC,QAAAA,WAAW,EAAE,CAAC;AAAtB,OAAR,CAAD,CAHzB;AAIE,MAAA,IAAI,EAAE5B,KAAK,CAAC4B,WAJd;AAAA,6BAME,QAAC,cAAD,OAAoBjC;AAApB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAvHF,eA+HE,QAAC,QAAD,OAAcY,UAAd;AAA0B,MAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YA/HF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmID;;GAzJuBhB,G;UAmBlBL,M;;;KAnBkBK,G","sourcesContent":["import React from 'react';\n\nimport {\n  ConnectionForm,\n  ColumnForm,\n  ConnectionList,\n  PaginationBar,\n  QueryPane,\n  TableList,\n  ColumnList,\n  DataGrid,\n} from './components';\n\nimport {\n  Collapse,\n  Flex,\n  IconButton,\n  Box,\n  Frame,\n  Typography,\n  css,\n  Avatar,\n  Dialog,\n  Backdrop,\n  Snackbar,\n  Spacer,\n  Spinner,\n  Menu,\n} from './components/UI/UI'; \nimport DocNode from './components/UI/Docs/DocNode';\nimport useApp from './hooks/useApp';\nimport { Smiley, Close, Hamburger, Dribble } from './icons';\n\nimport './style.css';\n\nexport default function App() {\n  const {\n    collapseHeight,\n    columnListArgs,\n    connectionListArgs,\n    connectionFormArgs,\n    getPage,\n    paginationParams,\n    queryPaneArgs,\n    setState,\n    state,\n    table,\n    tableDesc,\n    tableListArgs,\n    tableName,\n    tableNames,\n    viewPaneCss,\n    snackState,\n    say,\n  } = useApp();\n  const [open, setOpen] = React.useState(false);\n  const CloseIcon = !state.sidebarOpen ? Hamburger : Close;\n  return (\n    <div style={viewPaneCss} className=\"App\">\n     \n      <Collapse on={!state.ratchet} height={collapseHeight} noscroll>\n        <Flex>\n          <div className=\"sidebar\">\n            <Flex align=\"center\">\n              {!!state.sidebarOpen && (\n                <>\n                  <Avatar\n                    src=\"https://www.mysql.com/common/logos/powered-by-mysql-167x86.png\"\n                    alt=\"logo\"\n                    size=\"large\"\n                    mr={2}\n                    variant=\"rounded\"\n                  >\n                    a\n                  </Avatar>\n                  <Box mb={4}>\n                    <Typography variant=\"body1\">\n                      <b>Ratchet</b>\n                      <i>SQL</i>\n                    </Typography>\n                    <Typography variant=\"caption\">\n                      The Internet's base for data.\n                    </Typography>\n                  </Box>\n                </>\n              )}\n              <Spacer />\n              <IconButton\n                mr={4}\n                size=\"medium\"\n                onClick={() =>\n                  setState({ ...state, sidebarOpen: !state.sidebarOpen })\n                }\n              >\n                <CloseIcon />\n              </IconButton>\n            </Flex>\n            {!!state.sidebarOpen && (\n              <Frame offset={48}>\n                {/* empty state --- connection form/list */}\n                <Collapse on={!tableNames}>\n                  <ConnectionList {...connectionListArgs} />\n                </Collapse>\n                {/* list of tables in the current connection */}\n                <Collapse\n                  inspect\n                  noscroll\n                  on={!!tableNames}\n                  height={!!tableName ? '140px' : -1}\n                >\n                  {/* table list card */}\n                  <TableList {...tableListArgs} />\n                </Collapse>{' '}\n                {/* list of columns in the selected table */}\n                {!!tableDesc && <ColumnList {...columnListArgs} />}\n                <Collapse mb={5} on={!!state.selectedColumn}>\n                  <ColumnForm column={state.selectedColumn} />\n                </Collapse>\n              </Frame>\n            )}\n          </div>\n\n          <Flex column className=\"worksize\">\n            {!!state.newQuery && <QueryPane {...queryPaneArgs} />}\n\n            {!!table && !!tableDesc && (\n              <Box>\n                <Flex align=\"center\" style={{ width: '100%' }}>\n                  <PaginationBar\n                    {...paginationParams}\n                    click={getPage}\n                    label=\"row\"\n                  />\n                  <Spacer />\n                  {!!table.fields && (\n                    <Menu\n                      button=\"Sort...\"\n                      options={table.fields.map((f) => f.name)}\n                    />\n                  )}\n                </Flex>\n\n                <div\n                  className={css({\n                    workpane: 1,\n                    worksize: 1,\n                    lower: state.newQuery,\n                  })}\n                >\n                  {!!table && <DataGrid table={table} />}\n                </div>\n              </Box>\n            )}\n          </Flex>\n        </Flex>\n      </Collapse>\n      <Flex mt={2}>\n        <Spacer />\n        <Flex\n          align=\"center\"\n          onClick={() => setState({ ...state, ratchet: !state.ratchet })}\n        >\n          {' '}\n          <Box mr={2}>\n            Powered by <u className=\"link\">RatchetUI</u>{' '}\n          </Box>\n          <Smiley />\n        </Flex>\n      </Flex>\n\n      <Backdrop open={state.busy} style={{ color: '#fff' }}>\n        <Spinner>\n          {' '}\n          <Dribble />{' '}\n        </Spinner>\n        Loading...\n      </Backdrop>\n      <Dialog\n        height=\"440px\"\n        width=\"340px\"\n        onClose={() => setState((s) => ({ ...s, connectForm: !1 }))}\n        open={state.connectForm}\n      >\n        <ConnectionForm {...connectionFormArgs} />\n      </Dialog>\n      <Snackbar {...snackState} where=\"se\" />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}