{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/rachet-react-ui/src/components/ConnectionForm/ConnectionForm.js\";\nimport React from 'react';\nimport { TextBox, Typography, Flex, Button, Switch, Box, Alert, Center } from '../UI/UI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConnectionForm(_ref) {\n  let {\n    onSave,\n    onCancel,\n    state = {},\n    setState\n  } = _ref;\n\n  //const [state, setState] = React.useState(config);\n  const update = (n, v) => setState(s => ({ ...s,\n    [n]: v\n  }));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      column: true,\n      mt: 5,\n      style: {\n        maxWidth: 325\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        className: \"bold\",\n        children: \"Enter connection settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        column: true,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(TextBox, {\n            placeholder: \"Connection name\",\n            fullWidth: true,\n            value: state.title,\n            onChange: e => update('title', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(TextBox, {\n            placeholder: \"Host name\",\n            fullWidth: true,\n            value: state.host,\n            onChange: e => update('host', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(TextBox, {\n            placeholder: \"User name\",\n            fullWidth: true,\n            value: state.user,\n            onChange: e => update('user', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(TextBox, {\n            fullWidth: true,\n            type: \"password\",\n            placeholder: \"Password\",\n            value: state.password,\n            onChange: e => update('password', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(TextBox, {\n            fullWidth: true,\n            placeholder: \"Database\",\n            value: state.database,\n            onChange: e => update('database', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        children: \"Saved to localStorage only.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          spacing: 1,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => onSave(state),\n            variant: \"filled\",\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          spacing: 1,\n          xs: 9,\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            onChange: q => update('connect', q),\n            checked: !!state.connect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Box, {\n            className: \"link no-wrap\",\n            onClick: () => update('connect', !state.connect),\n            children: \"Connect on save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ConnectionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectionForm\");","map":{"version":3,"sources":["/home/miltonejones/projects/rachet-react-ui/src/components/ConnectionForm/ConnectionForm.js"],"names":["React","TextBox","Typography","Flex","Button","Switch","Box","Alert","Center","ConnectionForm","onSave","onCancel","state","setState","update","n","v","s","maxWidth","title","e","target","value","host","user","password","database","q","connect"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  TextBox,\r\n  Typography,\r\n  Flex,\r\n  Button,\r\n  Switch,\r\n  Box,\r\n  Alert,\r\n  Center,\r\n} from '../UI/UI';\r\n\r\nexport default function ConnectionForm({\r\n  onSave,\r\n  onCancel,\r\n  state = {},\r\n  setState,\r\n}) {\r\n  //const [state, setState] = React.useState(config);\r\n  const update = (n, v) => setState((s) => ({ ...s, [n]: v }));\r\n  return (\r\n    <>\r\n      <Box column mt={5} style={{ maxWidth: 325 }}>\r\n        <Typography variant=\"body2\" className=\"bold\">\r\n          Enter connection settings\r\n        </Typography>\r\n        <Center column>\r\n          <Flex spacing={1}>\r\n            <TextBox\r\n              placeholder=\"Connection name\"\r\n              fullWidth\r\n              value={state.title}\r\n              onChange={(e) => update('title', e.target.value)}\r\n            />\r\n          </Flex>\r\n          <Flex spacing={1}>\r\n            <TextBox\r\n              placeholder=\"Host name\"\r\n              fullWidth\r\n              value={state.host}\r\n              onChange={(e) => update('host', e.target.value)}\r\n            />\r\n          </Flex>\r\n          <Flex spacing={1}>\r\n            <TextBox\r\n              placeholder=\"User name\"\r\n              fullWidth\r\n              value={state.user}\r\n              onChange={(e) => update('user', e.target.value)}\r\n            />\r\n          </Flex>\r\n          <Flex spacing={1}>\r\n            <TextBox\r\n              fullWidth\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={state.password}\r\n              onChange={(e) => update('password', e.target.value)}\r\n            />\r\n          </Flex>\r\n          <Flex spacing={1}>\r\n            <TextBox\r\n              fullWidth\r\n              placeholder=\"Database\"\r\n              value={state.database}\r\n              onChange={(e) => update('database', e.target.value)}\r\n            />\r\n          </Flex>\r\n        </Center>\r\n        <Alert>Saved to localStorage only.</Alert>\r\n        <Flex xs={12}>\r\n          <Flex spacing={1} xs={3}>\r\n            <Button onClick={() => onSave(state)} variant=\"filled\">\r\n              save\r\n            </Button>\r\n          </Flex>\r\n          <Flex spacing={1} xs={9} align=\"center\">\r\n            <Switch\r\n              onChange={(q) => update('connect', q)}\r\n              checked={!!state.connect}\r\n            />{' '}\r\n            <Box\r\n              className=\"link no-wrap\"\r\n              onClick={() => update('connect', !state.connect)}\r\n            >\r\n              Connect on save\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}