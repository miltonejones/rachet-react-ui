{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport searchValues from \"../assets/component-list.json\";\nimport { useSnackbar } from '../components/UI';\nexport default function useApp() {\n  _s();\n\n  const search = param => {\n    return (found => {\n      if (!param) searchValues.map(node => {\n        node.components.map(c => found.push(`${node.category}: ${c}`));\n      });\n      return found.filter(f => f.toLowerCase().indexOf(param.toLowerCase() > -1));\n    })([]);\n  };\n\n  const {\n    snackState,\n    say\n  } = useSnackbar();\n  return {\n    snackState,\n    say,\n    search\n  };\n}\n\n_s(useApp, \"7czXrCkWPZtl9LtdveK5uVRjiLY=\", false, function () {\n  return [useSnackbar];\n});","map":{"version":3,"sources":["/home/miltonejones/projects/rachet-react-ui/src/hooks/useApp.js"],"names":["React","searchValues","useSnackbar","useApp","search","param","found","map","node","components","c","push","category","filter","f","toLowerCase","indexOf","snackState","say"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAGA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAE/B,QAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,WAAO,CAAEC,KAAD,IAAW;AACjB,UAAI,CAACD,KAAL,EACAJ,YAAY,CAACM,GAAb,CAAiBC,IAAI,IAAI;AACvBA,QAAAA,IAAI,CAACC,UAAL,CAAgBF,GAAhB,CAAoBG,CAAC,IAAIJ,KAAK,CAACK,IAAN,CAAY,GAAEH,IAAI,CAACI,QAAS,KAAIF,CAAE,EAAlC,CAAzB;AACD,OAFD;AAGA,aAAOJ,KAAK,CAACO,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,WAAF,GAAgBC,OAAhB,CAAwBX,KAAK,CAACU,WAAN,KAAsB,CAAC,CAA/C,CAAlB,CAAP;AACD,KANM,EAMJ,EANI,CAAP;AAOD,GARD;;AAWA,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAsBhB,WAAW,EAAvC;AAEA,SAAO;AAAEe,IAAAA,UAAF;AAAcC,IAAAA,GAAd;AAAmBd,IAAAA;AAAnB,GAAP;AACD;;GAhBuBD,M;UAaMD,W","sourcesContent":["import React from 'react';\r\nimport searchValues from \"../assets/component-list.json\";\r\n \r\n\r\nimport { useSnackbar } from '../components/UI';\r\n \r\n\r\nexport default function useApp() {\r\n \r\n  const search = param => {\r\n    return ((found) => {\r\n      if (!param)\r\n      searchValues.map(node => {\r\n        node.components.map(c => found.push(`${node.category}: ${c}`))\r\n      })\r\n      return found.filter(f => f.toLowerCase().indexOf(param.toLowerCase() > -1));\r\n    })([])\r\n  }\r\n  \r\n \r\n  const { snackState, say } = useSnackbar();\r\n \r\n  return { snackState, say, search };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}