{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/rachet-react-ui/src/components/UI/hooks/usePrompt.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Box, TextBox, Button, Divider } from '../UI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PromptBody(_ref) {\n  _s();\n\n  let {\n    text,\n    defaultValue,\n    onClick\n  } = _ref;\n  const [value, setValue] = React.useState(defaultValue);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      column: true,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 4,\n        mt: 4,\n        children: [text, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(TextBox, {\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onClick(false),\n          color: \"error\",\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          ml: 2,\n          onClick: () => onClick(value),\n          variant: \"filled\",\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PromptBody, \"+di++irDcPspjmhJVP9frUKGzpo=\");\n\n_c = PromptBody;\nexport default function usePrompt() {\n  _s2();\n\n  var _this = this;\n\n  const [state, setState] = React.useState({\n    open: false\n  });\n  const Prompt = React.useCallback(function () {\n    let text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Please enter a value';\n    let value = arguments.length > 1 ? arguments[1] : undefined;\n    return new Promise(yes => {\n      setState({\n        open: true,\n        value,\n        height: '160px',\n        children: /*#__PURE__*/_jsxDEV(PromptBody, {\n          text: text,\n          defaultValue: value,\n          onClick: q => {\n            setState({\n              open: false\n            });\n            yes(q);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, _this),\n        onClose: () => {\n          setState({\n            open: false\n          });\n          yes(false);\n        }\n      });\n    });\n  }, []);\n  return {\n    state,\n    Prompt\n  };\n}\n\n_s2(usePrompt, \"LygmwiO6VEfoQL+j/aqwcESuhiM=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PromptBody\");","map":{"version":3,"sources":["/home/miltonejones/projects/rachet-react-ui/src/components/UI/hooks/usePrompt.js"],"names":["React","Flex","Box","TextBox","Button","Divider","PromptBody","text","defaultValue","onClick","value","setValue","useState","e","target","usePrompt","state","setState","open","Prompt","useCallback","Promise","yes","height","children","q","onClose"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,OAApB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,OAApD;;;;AAEA,SAASC,UAAT,OAAqD;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAiC;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAeJ,YAAf,CAA1B;AACA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA,mBACGD,IADH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEG,KAAhB;AAAuB,UAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,QAAZ;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD,CADxB;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,OAAO,EAAE,MAAMA,OAAO,CAACC,KAAD,CAArC;AAA8C,UAAA,OAAO,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;;GA3BQJ,U;;KAAAA,U;AA6BT,eAAe,SAASS,SAAT,GAAqB;AAAA;;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACY,QAAN,CAAe;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAf,CAA1B;AACA,QAAMC,MAAM,GAAGnB,KAAK,CAACoB,WAAN,CACb;AAAA,QAACb,IAAD,uEAAQ,sBAAR;AAAA,QAAgCG,KAAhC;AAAA,WACE,IAAIW,OAAJ,CAAaC,GAAD,IAAS;AACnBL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,IADC;AAEPR,QAAAA,KAFO;AAGPa,QAAAA,MAAM,EAAE,OAHD;AAIPC,QAAAA,QAAQ,eACN,QAAC,UAAD;AACE,UAAA,IAAI,EAAEjB,IADR;AAEE,UAAA,YAAY,EAAEG,KAFhB;AAGE,UAAA,OAAO,EAAGe,CAAD,IAAO;AACdR,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AACAI,YAAAA,GAAG,CAACG,CAAD,CAAH;AACD;AANH;AAAA;AAAA;AAAA;AAAA,iBALK;AAePC,QAAAA,OAAO,EAAE,MAAM;AACbT,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAR;AACAI,UAAAA,GAAG,CAAC,KAAD,CAAH;AACD;AAlBM,OAAD,CAAR;AAoBD,KArBD,CADF;AAAA,GADa,EAwBb,EAxBa,CAAf;AA0BA,SAAO;AAAEN,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAP;AACD;;IA7BuBJ,S","sourcesContent":["import React from 'react';\r\nimport { Flex, Box, TextBox, Button, Divider } from '../UI';\r\n\r\nfunction PromptBody({ text, defaultValue, onClick }) {\r\n  const [value, setValue] = React.useState(defaultValue);\r\n  return (\r\n    <>\r\n      <Flex column>\r\n        <Box mb={4} mt={4}>\r\n          {text}:\r\n        </Box>\r\n        <Box>\r\n          <TextBox value={value} onChange={(e) => setValue(e.target.value)} />\r\n        </Box>\r\n        <Divider />\r\n        <Flex align=\"center\">\r\n          <Button\r\n            onClick={() => onClick(false)}\r\n            color=\"error\"\r\n            variant=\"outlined\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button ml={2} onClick={() => onClick(value)} variant=\"filled\">\r\n            Okay\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function usePrompt() {\r\n  const [state, setState] = React.useState({ open: false });\r\n  const Prompt = React.useCallback(\r\n    (text = 'Please enter a value', value) =>\r\n      new Promise((yes) => {\r\n        setState({\r\n          open: true,\r\n          value,\r\n          height: '160px',\r\n          children: (\r\n            <PromptBody\r\n              text={text}\r\n              defaultValue={value}\r\n              onClick={(q) => {\r\n                setState({ open: false });\r\n                yes(q);\r\n              }}\r\n            />\r\n          ),\r\n\r\n          onClose: () => {\r\n            setState({ open: false });\r\n            yes(false);\r\n          },\r\n        });\r\n      }),\r\n    []\r\n  );\r\n  return { state, Prompt };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}