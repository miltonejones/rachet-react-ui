{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/rachet-react-ui/src/components/PaginationBar/PaginationBar.js\",\n    _s = $RefreshSig$();\n\nimport { ChevronsLeft, ChevronLeft, ChevronRight } from '../../icons';\nimport { IconButton } from '../UI/UI';\nimport React from 'react';\nimport './PaginationBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const paginate = (startPage, pageSize, length, label) => {\n  const beginPage = startPage + 1;\n  const pageNum = Math.ceil(beginPage / pageSize);\n  const pageLen = Math.ceil(length / pageSize);\n  const pageText = `Page ${pageNum} of  ${pageLen} pages`;\n  const descText = `${beginPage} to ${Math.min(startPage + pageSize, length)} of  ${length} ${label}s`;\n  const thisPage = startPage / pageSize;\n  const last = startPage + pageSize >= length;\n  return {\n    pageText,\n    descText,\n    thisPage,\n    last\n  };\n};\n\nconst PaginationBar = _ref => {\n  _s();\n\n  let {\n    startPage,\n    pageSize,\n    length,\n    click,\n    label = 'item',\n    hideLabel\n  } = _ref;\n  const [state, setState] = React.useState({\n    page: false\n  });\n  const pagination = paginate(startPage, pageSize, length, label);\n  if (!length || length <= pageSize) return /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 45\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PaginationBar\",\n    children: [!hideLabel && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setState(s => ({\n          page: !s.page\n        })),\n        children: state.page ? pagination.pageText : pagination.descText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToolTipButton, {\n        when: () => pagination.thisPage > 1,\n        icon: /*#__PURE__*/_jsxDEV(ChevronsLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this),\n        disabled: startPage < 1,\n        click: () => click && click(-pagination.thisPage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToolTipButton, {\n      icon: /*#__PURE__*/_jsxDEV(ChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this),\n      disabled: startPage < 1,\n      click: () => click(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToolTipButton, {\n      icon: /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this),\n      disabled: pagination.last,\n      click: () => click(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaginationBar, \"IDWfxKnvKFfifslB7wJ0zW/2P8E=\");\n\n_c = PaginationBar;\nPaginationBar.defaultProps = {};\nexport default PaginationBar;\n\nconst ToolTipButton = _ref2 => {\n  let {\n    when,\n    icon,\n    disabled,\n    click\n  } = _ref2;\n  if (when && !when()) return /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    ml: 2,\n    onClick: click,\n    disabled: disabled,\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ToolTipButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaginationBar\");\n$RefreshReg$(_c2, \"ToolTipButton\");","map":{"version":3,"sources":["/home/miltonejones/projects/rachet-react-ui/src/components/PaginationBar/PaginationBar.js"],"names":["ChevronsLeft","ChevronLeft","ChevronRight","IconButton","React","paginate","startPage","pageSize","length","label","beginPage","pageNum","Math","ceil","pageLen","pageText","descText","min","thisPage","last","PaginationBar","click","hideLabel","state","setState","useState","page","pagination","s","defaultProps","ToolTipButton","when","icon","disabled"],"mappings":"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","sourcesContent":["import { ChevronsLeft, ChevronLeft, ChevronRight } from '../../icons';\r\nimport { IconButton } from '../UI/UI';\r\nimport React from 'react';\r\nimport './PaginationBar.css';\r\n\r\nexport const paginate = (startPage, pageSize, length, label) => {\r\n  const beginPage = startPage + 1;\r\n  const pageNum = Math.ceil(beginPage / pageSize);\r\n  const pageLen = Math.ceil(length / pageSize);\r\n  const pageText = `Page ${pageNum} of  ${pageLen} pages`;\r\n  const descText = `${beginPage} to ${Math.min(\r\n    startPage + pageSize,\r\n    length\r\n  )} of  ${length} ${label}s`;\r\n  const thisPage = startPage / pageSize;\r\n  const last = startPage + pageSize >= length;\r\n\r\n  return {\r\n    pageText,\r\n    descText,\r\n    thisPage,\r\n    last,\r\n  };\r\n};\r\n\r\nconst PaginationBar = ({\r\n  startPage,\r\n  pageSize,\r\n  length,\r\n  click,\r\n  label = 'item',\r\n  hideLabel,\r\n}) => {\r\n  const [state, setState] = React.useState({ page: false });\r\n  const pagination = paginate(startPage, pageSize, length, label);\r\n  if (!length || length <= pageSize) return <i />;\r\n  return (\r\n    <div className=\"PaginationBar\">\r\n      {!hideLabel && (\r\n        <>\r\n          {' '}\r\n          <div onClick={() => setState((s) => ({ page: !s.page }))}>\r\n            {state.page ? pagination.pageText : pagination.descText}\r\n          </div>\r\n          <ToolTipButton\r\n            when={() => pagination.thisPage > 1}\r\n            icon={<ChevronsLeft />}\r\n            disabled={startPage < 1}\r\n            click={() => click && click(-pagination.thisPage)}\r\n          />\r\n        </>\r\n      )}\r\n      <ToolTipButton\r\n        icon={<ChevronLeft />}\r\n        disabled={startPage < 1}\r\n        click={() => click(-1)}\r\n      />\r\n      <ToolTipButton\r\n        icon={<ChevronRight />}\r\n        disabled={pagination.last}\r\n        click={() => click(1)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPaginationBar.defaultProps = {};\r\nexport default PaginationBar;\r\n\r\nconst ToolTipButton = ({ when, icon, disabled, click }) => {\r\n  if (when && !when()) return <i />;\r\n  return (\r\n    <IconButton ml={2} onClick={click} disabled={disabled}>\r\n      {icon}\r\n    </IconButton>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}