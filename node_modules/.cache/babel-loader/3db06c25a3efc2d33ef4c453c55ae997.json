{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nexport default function useSnackbar() {\n  _s();\n\n  const [snackState, setState] = React.useState({\n    open: false\n  });\n  const say = React.useCallback(function () {\n    let text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Please enter a value';\n    return new Promise(yes => {\n      setState({\n        open: true,\n        children: text,\n        onClose: () => {\n          setState({\n            open: false\n          });\n          yes(false);\n        }\n      });\n      setTimeout(() => {\n        setState({\n          open: false\n        });\n      }, 2999);\n    });\n  }, []);\n  return {\n    snackState,\n    say\n  };\n}\n\n_s(useSnackbar, \"LHZigISUDfajUSdzEpijwrDiFAw=\");","map":{"version":3,"sources":["/home/miltonejones/projects/rachet-react-ui/src/components/UI/hooks/useSnackbar.js"],"names":["React","useSnackbar","snackState","setState","useState","open","say","useCallback","text","Promise","yes","children","onClose","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBH,KAAK,CAACI,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAf,CAA/B;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACO,WAAN,CACV;AAAA,QAACC,IAAD,uEAAQ,sBAAR;AAAA,WACE,IAAIC,OAAJ,CAAaC,GAAD,IAAS;AACnBP,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,IADC;AAEPM,QAAAA,QAAQ,EAAEH,IAFH;AAGPI,QAAAA,OAAO,EAAE,MAAM;AACbT,UAAAA,QAAQ,CAAC;AAAEE,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAR;AACAK,UAAAA,GAAG,CAAC,KAAD,CAAH;AACD;AANM,OAAD,CAAR;AASAG,MAAAA,UAAU,CAAC,MAAM;AACfV,QAAAA,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAbD,CADF;AAAA,GADU,EAgBV,EAhBU,CAAZ;AAkBA,SAAO;AAAEH,IAAAA,UAAF;AAAcI,IAAAA;AAAd,GAAP;AACD;;GArBuBL,W","sourcesContent":["import React from 'react';\r\n\r\nexport default function useSnackbar() {\r\n  const [snackState, setState] = React.useState({ open: false });\r\n  const say = React.useCallback(\r\n    (text = 'Please enter a value') =>\r\n      new Promise((yes) => {\r\n        setState({\r\n          open: true,\r\n          children: text,\r\n          onClose: () => {\r\n            setState({ open: false });\r\n            yes(false);\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          setState({ open: false });\r\n        }, 2999);\r\n      }),\r\n    []\r\n  );\r\n  return { snackState, say };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}